--------------------------------- SENTENCIAS DE LAS TABLAS--------------------------------

SET SERVEROUTPUT ON;

SELECT * FROM USER_CONSTRAINTS;
TRUNCATE TABLE SOCIOS CASCADE; --esta orden no me sale


DROP TABLE CALENDARIO CASCADE CONSTRAINTS;
DROP TABLE JUNTA CASCADE CONSTRAINTS;
DROP TABLE SOCIOS CASCADE CONSTRAINTS;
DROP TABLE CUOTAS CASCADE CONSTRAINTS;
DROP TABLE ACTIVIDADES CASCADE CONSTRAINTS;
DROP TABLE ACTIVIDADES_SOCIOS CASCADE CONSTRAINTS;
DROP TABLE TABLA_CONTROL;
DROP SEQUENCE INCREMENTO_SOCIO;
DROP TRIGGER VALIDAR_SOCIO2;
DROP TABLE AUTENTICACION;
DROP PROCEDURE VALIDAR_CUOTA_2;
DROP TRIGGER VALIDAR_SOCIO2;

ALTER TABLE NOMBRE_TABALA ADD CONSTRAINT CONTROL_SOCIO_FK FOREIGN KEY(COD_SOCIO) REFERENCES SOCIOS(COD_SOC),
ALTER TABLE NOMBRE_TABALA ADD CONSTRAINT CONTROL_NOMBRE_FK FOREIGN KEY (NOMBRE) REFERENCES SOCIOS(NOMBRE),
ALTER TABLE NOMBRE_TABALA ADD CONSTRAINT CONTROL_APELLIDOS_FK FOREIGN KEY (APELLIDOS) REFERENCES SOCIOS(APELLIDOS),



ALTER TABLE CUOTAS ENABLE CONSTRAINT SOC_COD_FK;
ALTER TABLE SOCIOS MODIFY (EMAIL VARCHAR2(24) UNIQUE);
ALTER TABLE CUOTAS ENABLE CONSTRAINT TIPO_CUOTA_CK;
ALTER TABLE CUOTAS RENAME COLUMN "SI/NO_PAGADO" TO SI_NO_PAGADO;
ALTER TABLE CUOTAS RENAME COLUMN IMPORTE_RECIBIDO TO IMPORTE_INGRESADO;
ALTER TABLE CUOTAS RENAME COLUMN IMPORTE_PAGO TO CUANTO_HAY_QUE_PAGAR;
ALTER TABLE ACTIVIDADES RENAME COLUMN COD_SOCIOS TO SOCIO_ORGANIZADO
ALTER TRIGGER original_name RENAME TO new_name;
ALTER PROCEDURE VALIDAR_CUOTA2 RENAME TO VALIDAR_CUOTA;

DELETE  FROM SOCIOS WHERE COD_SOC=NUMERO_SOCIO;
ALTER TABLE SOCIOS DISABLE CONSTRAINT SOCIOS_SOC_RESP_FK;
ALTER TABLE SOCIOS DISABLE CONSTRAINT SOC_COD_FK;
ALTER TABLE SOCIOS MODIFY ('NOMBRE_CAMPO' DEFAULT 2);

ALTER TABLE SOCIOS ADD CONSTRAINT JUNTA_SOCIS_FK FOREIGN KEY(FECHA_INICIO,FECHA_FINAL) REFERENCES JUNTA(FECHA_INI,FECHA_FIN);
ALTER TABLE SOCIOS ADD CONSTRAINT SOCIOS_SOC_RESP_FK FOREIGN KEY (COD_SOCIO_RESPONSABLE) REFERENCES SOCIOS (COD_SOC);
ALTER TABLE ACTIVIDADES ADD CONSTRAINT ACTIVIADES_SOCIOS_FK FOREIGN KEY(COD_SOCIOS) REFERENCES SOCIOS(COD_SOC);

ALTER TABLE SOCIOS ADD  CONTRASEÑA VARCHAR2(16);
ALTER TABLE SOCIOS MODIFY (TIPO_SOCIO VARCHAR2(24) CONSTRAINT TIPO_CK CHECK (TIPO_SOCIO = 'USUARIO' OR TIPO_SOCIO = 'ADMINISTRADOR' OR TIPO_SOCIO='PENDIENTE'));
SELECT * FROM USER_CONSTRAINTS;
ALTER TABLE SOCIOS DROP CONSTRAINT TIPO_CK; --> BORRO LA CONSTRAINT ANTES DE CORREGIR UNA COLUMNA, PORQUE LA CONSTRAINT ES UNIQUE
ALTER TABLE SOCIOS MODIFY (MULTAS NUMBER(4,0) DEFAULT(0));
-- COMPROBACIONES PARA SACAR LOS DIAS QUE HAN TRANSCURRIDO DEL AÑO:

SELECT TO_CHAR(SYSDATE,'ddd') FROM DUAL; --> NOS DEVUELVE UN VALOR DE TTIPO VARCHAR2, NO PODEMOS OPERAR CON ÉL
SELECT TO_CHAR(SYSDATE,'MM') FROM DUAL; --AQUI LO HAGO POR MES
SELECT TO_NUMBER(TO_CHAR(sysdate,'ddd')) FROM DUAL; --> NOS DEVUELVE UN VALOR DE TIPO NUMBER, PARA PODER OPERAR CON ÉL !!
SELECT trunc(SYSDATE,'YYYY') FROM DUAL;--> numeros de dias transcurridos desde el 1 de enero
SELECT (SYSDATE-'31/12/2019') FROM DUAL;--> Da error
SELECT TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))+1 FROM DUAL; --> suma 1 año
SELECT TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) FROM DUAL;

SELECT TO_NUMBER(EXTRACT(YEAR FROM TO_DATE(sysdate,'DD/MM/YYYY'))) FROM DUAL;
SELECT (TO_CHAR(SYSDATE,'YYYY'))-12 FROM DUAL; --> resta 12 años


SELECT EXTRACT(DAY FROM TO_DATE(sysdate,'DD/MM/YYYY')) FROM DUAL;
SELECT EXTRACT(MONTH FROM TO_DATE(sysdate,'DD/MM/YYYY')) FROM DUAL;
SELECT EXTRACT(YEAR FROM TO_DATE(sysdate,'DD/MM/YYYY')) FROM DUAL;

--> se lo pongo a una variable:

SELECT EXTRACT(DAY FROM TO_DATE(sysdate,'DD/MM/YYYY')) INTO V_DIAS_MES FROM DUAL;
SELECT EXTRACT(MONTH FROM TO_DATE(sysdate,'DD/MM/YYYY')) INTO V_DIAS_MES FROM DUAL;
SELECT EXTRACT(YEAR FROM TO_DATE(sysdate,'DD/MM/YYYY')) INTO V_DIAS_MES FROM DUAL;

select trunc(sysdate,'mm') from dual; --> primer dia del mes
select last_day(trunc(sysdate,'mm')) from dual; --> ultimo dia del mes

select trunc(sysdate,'yyyy') from dual;--> primer dia del año
select last_day(trunc(sysdate,'yyyy'))+334 from dual; --> último día del año

--> si el mes de febrero tiene 28 días --> el año tiene 365 días --> 334 DÍAS
--> poner la condición de si el mes de febrero tiene 29 dias --> el año tiene 366 (sumar un día mas --> 335 DIAS

select LAST_DAY(trunc(sysdate,'yyyy')+34) from dual; --> ME COGE EL ÚLTIMO DÍA DEL MES DE FEBRERO
SELECT TRUNC(LAST_DAY(SYSDATE)) FDAY FROM DUAL;
SELECT TRUNC(LAST_DAY('10/02/2012')) FDAY FROM DUAL; --< ME COGE EL ULTIMO DIA DEL MES DE FEBRERO DEL AÑO 2012, QUE ES BISIESTO !!
SELECT TRUNC(LAST_DAY('10/02/2013')) FDAY FROM DUAL; --> ESTE AÑO NO ES BISIESTO !!

select last_day(round(sysdate,'DD'))from dual; --> ULTIMO DIA DEL MES ACTUAL (SYSDATE)
SELECT LAST_DAY(TRUNC(SYSDATE,'YYYY')) FROM DUAL;--> ULTIMO DIA DEL PRIMER MES DEL AÑO (ENERO)
SELECT TRUNC(SYSDATE,'YYYY') FROM DUAL; --PRIMER DÍA DEL AÑO VIGENTE (SYSDATE) (1 DE ENERO)
SELECT LAST_DAY(TRUNC(SYSDATE,'YYYY'))+30 FROM DUAL;


SELECT TRUNC( TO_DATE( SYSDATE, 'DD/MM/YYYY') , 'MM' ) FROM DUAL; --> PRIMER DIA DEL MES VIGENTE (SYSDATE)
SELECT LAST_DAY(TRUNC(SYSDATE ,'Month')) FROM DUAL; --> ULTIMO DIA DEL MES VIGENTE (MAYO)
SELECT ADD_MONTHS(LAST_DAY(TRUNC(SYSDATE,'YEAR')),11) FROM DUAL;
SELECT TRUNC(LAST_DAY(SYSDATE)) FROM DUAL;



---------------------------------------------------- CREACIÓN DE TABLAS ---------------------------------------------------------------


CREATE TABLE CALENDARIO(
    CALENDARIO_ID NUMBER PRIMARY KEY,
    ANYO DATE
);

CREATE TABLE JUNTA(
    FECHA_INI DATE UNIQUE NOT NULL,
    FECHA_FIN DATE UNIQUE NOT NULL,
    IMFORMACION VARCHAR2(128),     
    CONSTRAINT JUNTA_PK PRIMARY KEY(FECHA_INI,FECHA_FIN)
);

CREATE TABLE SOCIOS (
    COD_SOC NUMBER(9) PRIMARY KEY,
    NOMBRE VARCHAR2(24) NOT NULL,
    APELLIDOS VARCHAR2(24) NOT NULL,
    DNI VARCHAR2(9),
    FECHA_ALTA  DATE NOT NULL, CONSTRAINT FECHA_ALTA_CK CHECK(FECHA_ALTA>FECHA_NACI),
    TELEFONO NUMBER(12),
    EMAIL VARCHAR2(24) UNIQUE,
    FECHA_NACI DATE NOT NULL,
    TIPO_SOCIO VARCHAR2(24) NOT NULL, CONSTRAINT TIPO_CK CHECK (TIPO_SOCIO = 'USUARIO' OR TIPO_SOCIO = 'ADMINISTRADOR' OR TIPO_SOCIO='PENDIENTE'),
    CARGO VARCHAR2(24) CONSTRAINT CARGO_CK CHECK (CARGO = 'PRESIDENTE' OR CARGO = 'VICEPRESIDENTE' OR CARGO = 'SECRETARIO' OR CARGO = 'TESORERO' OR CARGO = 'VOCAL'),
    FECHA_INICIO DATE,
    FECHA_FINAL DATE,
    COD_SOCIO_RESPONSABLE NUMBER (9,0) CONSTRAINT SOCIOS_SOC_RESP_FK REFERENCES SOCIOS (COD_SOC),
    MULTAS NUMBER(4,0) DEFAULT(0),
    TIPO_FALTAS VARCHAR2(24) CONSTRAINT FALTAS_GRAVES_CK CHECK (TIPO_FALTAS='GRAVE' OR TIPO_FALTAS='LEVE' OR TIPO_FALTAS='NO'),
    MOROSO VARCHAR2(2) DEFAULT ('NO'),
    NOTAS VARCHAR2(300) DEFAULT (NULL)
);

CREATE TABLE CUOTAS(
    TIPO_CUOTA VARCHAR2(24) PRIMARY KEY CONSTRAINT TIPO_CUOTA_CK CHECK (TIPO_CUOTA = 'MENORES' OR TIPO_CUOTA= 'ADULTOS' OR TIPO_CUOTA= 'ADMINISTRADOR'),
    SI_NO_PAGADO VARCHAR2(24) DEFAULT ('NO_PAGADO'),
    ANYO_VALIDEZ NUMBER(4) NOT NULL,
    CUANTO_HAY_QUE_PAGAR NUMBER(24),
    SOCIOS_COD_SOC NUMBER(9) NOT NULL CONSTRAINT SOC_COD_FK REFERENCES SOCIOS(COD_SOC),
    IMPORTE_INGRESADO NUMBER(9)
);

CREATE TABLE ACTIVIDADES(
    COD_ACTIVI VARCHAR2(24) PRIMARY KEY,
    TIPO VARCHAR2(24) NOT NULL CONSTRAINT TIPO_ACTIVIDADES_CK CHECK (TIPO = 'SALIDA_AL_MONTE' OR TIPO = 'ALBERFGUE_FIN_DE_SEMANA' OR TIPO = 'REUNION' OR TIPO = 'COMIDA' OR TIPO = 'OTROS'),
    DIFICULTAD  VARCHAR(24) NOT NULL CONSTRAINT DIFICULTAD_CK CHECK (DIFICULTAD = 'ALTA' OR DIFICULTAD = 'MEDIA' OR DIFICULTAD = 'BAJA'),
    SOCIOS_COD_SOC NUMBER(9) NOT NULL CONSTRAINT SOC_ACTIVI_FK REFERENCES SOCIOS(COD_SOC),
    PRECIO NUMBER NOT NULL,
    MOTIVO_SUSPENSION VARCHAR2(200),
    CALENDARIO_FK NUMBER CONSTRAINT CALEND_ID_FK REFERENCES CALENDARIO(CALENDARIO_ID),
    COD_SOCIOS NUMBER(9),
    FECHA_INICIO DATE NOT NULL,
    FECHA_FIN DATE NOT NULL,
    ACEPTADA VARCHAR2(24)
);



CREATE TABLE TABLA_CONTROL(
COD_SOC NUMBER(9) PRIMARY KEY,
NOMBRE VARCHAR2(24),
APELLIDOS VARCHAR2(24),
FECHA_INCIDENCIA TIMESTAMP, --> NOS DICE LA FECHA ACTUAL, DÍA Y HORA
TEXTO VARCHAR2(300)
);

CREATE TABLE ACTIVIDADES_SOCIOS(
    SOCIOS_COD_SOC NUMBER(9) CONSTRAINT SOCIOS_FK REFERENCES SOCIOS(COD_SOC),
    ACTIVIDADES_COD_ACTIVI VARCHAR2(8) CONSTRAINT ACTIVIDADES_FK REFERENCES ACTIVIDADES(COD_ACTIVI), 
    CONSTRAINT ACTIVIDADES_SOCIOS_PK PRIMARY KEY(SOCIOS_COD_SOC,ACTIVIDADES_COD_ACTIVI)
);

------ CREAR UNA SEQUENCIA PARA COD_SOCIO Y OTRA PARA COD_ACTIVIDAD Y CALENDARIO_ID -----------------------------


CREATE SEQUENCE INCREMENTO_SOCIO
    INCREMENT BY 1
    START WITH 1;

CREATE SEQUENCE INCREMENTO_ACTIVIDAD
    INCREMENT BY 1
    START WITH 1;
    
CREATE SEQUENCE INCREMENTO_CALENDARIO
    INCREMENT BY 1
    START WITH 1;

--> HAGO PRUEBAS  CON 7 POSIBLES SOCIOS (lOS PONGO A PRUEBA CON EL TEMA DE LA EDAD) --> AL FINAL 3 AÑADIDOS Y 4 ERRORES --> BIEN !!!
--> TENER EN CUENTA QUE EN EL CAMPO --> "CARGO" PUEDE SER "NULL" (NO ESTÁ EN NINGÚN CARGO DE LA JUNTA) Y POR DEFECTO NO TIENE "FECHA DE INICIO" NI "FECHA FIN" EN LA JUNTA

INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'PACO','RUIZ','1234578A',SYSDATE,623586975,'pruiz@gmail.com','10/05/1971','USUARIO',NULL,NULL,NULL,NULL,DEFAULT,'NO',DEFAULT,'Primer socio Fundador de la Asociación de Montaña "Mendi Taldea"'); --> ALUMNO RESPONSABLE MAYOR DE 18  -->OK
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'FERNANDO','LOPEZ',NULL,'10/05/2019',NULL,NULL,'10/05/2018','USUARIO',NULL,NULL,NULL,1,DEFAULT,'NO',DEFAULT,DEFAULT,'PPPP'); --> USUARIO MENOR DE 4 AÑOS CON SOCIO RESPONSABLE MAYOR DE 18 SOCIO=1 --> ERROR
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'ION','PEREZ','56123782C','10/05/2012',654654987,'iperez@gmail','10/05/2007','USUARIO',NULL,NULL,NULL,NULL,DEFAULT,'NO',DEFAULT,DEFAULT); --> ENTRE 4 Y 18 AÑOS SIN SOCIO RESPONSABLE(NULL) --> ERROR
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'LUIS','MENDEZ','89562345E','10/05/2010',789365142,'lmendez@gmail.com','10/05/2006','USUARIO',NULL,NULL,NULL,1,DEFAULT,'NO',DEFAULT,DEFAULT); --> MENOR DE 18 AÑOS CON RESPONSABLE MAYOR DE 18 AÑOS --> OK
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'ALFONSO','GONZALEZ','78451256N','10/05/2017',NULL,NULL,'10/05/2010','USUARIO',NULL,NULL,NULL,4); --> MENOR DE 18 AÑOS Y SU SOCIO RESPONSABLE TIENE MENOS DE 18 AÑOS, QUE ES EL SOCIO NUMERO 4  --> ERROR
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'LEONARDO','SAGUNTO',NULL,'10/05/2019',NULL,NULL,'10/05/2018','USUARIO',NULL,NULL,NULL,NULL); --> MENOR DE 4 AÑOS --> ERROR
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'FERNANDO','LOPEZ','78321654G','10/05/2017',623456951,'flopez@gmail.com','10/05/2012','USUARIO',NULL,NULL,NULL,1);--> MENOR DE 18 Y RESPONSABLE MAYOR DE 18, SOCIO=1 --> OK

--MAS INSERCIONES CORRECTAS PARA FORMAR UNA PEQUEÑA BASE DE DATOS:

INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'FEDERICO','SAGASTI','12521362A','01/02/2019',776524896,'fsagasti@gmail.com','15/05/2012','USUARIO',NULL,NULL,NULL,4);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'ASIER','MENENDEZ','35127813A','05/05/2019',669586127,'amenendez@msm.com','17/02/2013','USUARIO',NULL,NULL,NULL,1);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'ANDER','RODRIGUEZ','69312541A','02/02/2000',725651753,'arodriguez@outlook.com','14/03/1978','USUARIO',NULL,NULL,NULL,NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'JUANAN','RUIZ','11223344A','01/03/1995',725986324,'jruiz@gmail.com','13/08/1984','USUARIO',NULL,NULL,NULL,9);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'GUILLE','BOTET','55667788A','02/05/2006',784256398,'gbotet@yahoo.es','12/06/1985','USUARIO',NULL,NULL,NULL,NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'FERMÍN','RAMIREZ','99223365A','03/06/2010',789123652,'framirez@gmail.com','10/05/1999','USUARIO',NULL,NULL,NULL,12);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'IRUNE','MENDEZ','16523889A','01/02/2019',667895236,'imendez@outlook.com','10/01/2001','USUARIO',NULL,NULL,NULL,NULL);

-- INSERTO TODOSLOS MIEMBROS DE LA JUNTA,EN TOTAL 9, TODOS MAYORES DE EDAD Y QUE CUANDO SE DIERON DE ALTA TAMBIEN ERAN MAYORES DE 18 AÑOS

INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'PEPE','ARIAS','65412345P','17/02/2011',666123852,'parias@outlook.com','14/02/1956','ADMINISTRADOR','PRESIDENTE','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'MARIA','ROJO','63561786A','07/02/1990',623524896,'mrojo@gmail.com','10/08/1965','ADMINISTRADOR','VICEPRESIDENTE','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'IOSU','MACIAS','61232678S','17/02/2002',639963843,'imacias@yahoo.es','29/03/1975','ADMINISTRADOR','TESORERO','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'ALFONSO','SEGUNDO','66632195N','17/02/1992',699275123,'asegundo@msm.com','02/09/1971','ADMINISTRADOR','SECRETARIO','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'MARISA','GOMEZ','62356285B','17/02/1989',696562378,'mgomez@gmail.com','11/04/1968','ADMINISTRADOR','VOCAL','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'LUISA','AGIRRE','66578932K','17/02/2009',666236782,'lagirre@outlook.com','13/02/1989','ADMINISTRADOR','VOCAL','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'ANDRES','NUÑEZ','65412345R','17/02/2009',689213965,'anuñez@yahoo.es','14/02/1990','ADMINISTRADOR','VOCAL','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'SARA','LEKUONA','60023501S','17/02/2000',653963147,'slekuona@outlook.com','17/02/1978','ADMINISTRADOR','VOCAL','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'JACINTO','MARTIN','65412345H','17/02/2010',699623859,'jmartin@msm.com','20/02/1980','ADMINISTRADOR','VOCAL','01/09/2018','01/09/2019',NULL);

/*
    AHORA TENGO QUE HACER INSERCIONES EN LA TABLA DE CUOTAS:
    
--> TIPO DE CUOTAS --> HACEMOS QUE SEA POR MESES Y MÚLTIPLOS DE 12 PARA QUE NO HAYA DECIMALES:
--> POR MESES='MENORES'= 120 EUROS/AÑO (10EUROS/MES) , 'MAYORES'=144 EUROS/AÑO (14 EUROS/MES) Y 'ADMINISTRADOR'= 132 EUROS/AÑO (11 EUROS/MES)

*/

INSERT INTO CUOTAS VALUES('MENORES',NULL,2019,120,4,70);
INSERT INTO CUOTAS VALUES('MENORES','NO PAGADO','31/12/2019',30,9,30);
INSERT INTO CUOTAS VALUES('MENORES','NO PAGADO','31/12/2019',30,9,30);
INSERT INTO CUOTAS VALUES('MENORES','NO PAGADO','31/12/2019',30,9,30);



----------------------------------------------------TRIGGERS--------------------------------------------------------------------


-- HAGO UN TRIGGER PARA CONTROLAR LA EDAD DE LOS USUARIOS QUE QUIEREN REGISTRARSE COMO SOCIOS:

CREATE OR REPLACE TRIGGER VALIDAR_SOCIO
BEFORE INSERT ON SOCIOS
FOR EACH ROW

DECLARE
    V_AÑOS_USUARIO_NUEVO NUMBER; -- AQUI SACO LOS AÑOS DEL USUARIO QUE QUIERE REGISTRARSE, RESTANDO LA FECHA ACTUAL MENOS SU FECHA CUMPLEAÑOS
    V_AÑOS_RESPONSABLE NUMBER; --> AÑOS DEL SOCIO RESPONSABLE
    
BEGIN

    --> METER COLUMNA NUEVA DE "SOCIO_TUTOR" O "COD_SOCIO_RESPONSABLE" EN LA TABALA SOCIOS, QUE ES QUE SE VA A RESPONSABILIZAR DEL MENOR
    
    
    SELECT TRUNC((SYSDATE-:NEW.FECHA_NACI)/365,0) INTO V_AÑOS_USUARIO_NUEVO FROM DUAL; --> "DUAL" --> TABLA TEMPORAL --> AÑOS DEL NUEVO SOCIO
 
    --> COMPROBAR QUE EL SOCIO NUEVO TIENE MENOS DE 4 AÑOS
    
    IF V_AÑOS_USUARIO_NUEVO<4 THEN
    
        RAISE_APPLICATION_ERROR(-20500, 'EL USUARIO TIENE MENOS DE 4 AÑOS');
        INSERT INTO TABLA_CONTROL VALUES (:NEW.COD_SOC,:NEW.NOMBRE,:NEW.APELLIDOS,SYSDATE,'EL USUARIO TIENE MENOS DE 4 AÑOS');
        --INSERT INTO TABLA_CONTROL (NOMBRE,FECHA_INCIDENCIA,TEXTO) VALUES (USER,SYSTIMESTAMP,'EL USUARIO TIENE MENOS DE 4 AÑOS');
    
    END IF;

    -->ES MENOR DE 18 AÑOS Y NO TIENE SOCIO RESPONSABLE (NULL)
    
        IF V_AÑOS_USUARIO_NUEVO<18 AND :NEW.COD_SOCIO_RESPONSABLE IS NULL THEN
            RAISE_APPLICATION_ERROR(-20300, 'EL USUARIO TIENE QUE TENER UN SOCIO RESPONSABLE ');
            INSERT INTO TABLA_CONTROL (TEXTO) VALUES ('EL USUARIO TIENE QUE TENER UN SOCIO RESPONSABLE');
            --INSERT INTO TABLA_CONTROL (NOMBRE,FECHA_INCIDENCIA,TEXTO) VALUES (USER,SYSTIMESTAMP,'EL USUARIO TIENE QUE TENER UN SOCIO RESPONSABLE');
        END IF;
    

    IF V_AÑOS_USUARIO_NUEVO<18 AND :NEW.COD_SOCIO_RESPONSABLE IS NOT NULL THEN
    
        SELECT TRUNC((SYSDATE-FECHA_NACI)/365,0) INTO V_AÑOS_RESPONSABLE FROM SOCIOS WHERE :NEW.COD_SOCIO_RESPONSABLE=COD_SOC; --> AÑOS DEL SOCIO RESPONSABLE
    
        --> EL SOCIO RESPONSABLE ES MENOR DE EDAD
        IF V_AÑOS_RESPONSABLE<18 THEN
            RAISE_APPLICATION_ERROR(-20400, 'EL USUARIO TIENE QUE TENER UN SOCIO RESPONSABLE MAYOR DE EDAD');
            INSERT INTO TABLA_CONTROL (TEXTO) VALUES ('EL USUARIO TIENE QUE TENER UN SOCIO RESPONSABLE MAYOR DE EDAD');
            --INSERT INTO TABLA_CONTROL (NOMBRE,FECHA,TEXTO) VALUES(USER,SYSTIMESTAMP,'EL USUARIO TIENE QUE TENER UN SOCIO RESPONSABLE MAYOR DE EDAD');
        END IF;
        
    END IF;
    
    
END VALIDAR_SOCIO; 

SHOW ERRORS;

----------------- TRIGGER: COMPROBAR SI EL USUARIO HA PAGADO LA CUOTA ANTES DE FINAL DEL PRESENTE AÑO PARA RENOVAR--------


----------------------------------------TRIGGER VALIDAR CUOTA --------------------------------------------------------------

-->PROCEDURES: VISUALIZAR ACTIVIDADES, CREAR ACTIVIDADES, CONOCER MENORES DE EDAD Y SUS RESPONSABLES, MIRAR SOCIOS MOROSOS Y DARLOS DE BAJA, PERO NO BORRAR SUS DATOS)
--> HACER UN PACKAGE DE TODO LO ANTERIOR


CREATE OR REPLACE PROCEDURE VALIDAR_CUOTA (V_COD_SOCIO IN SOCIOS.COD_SOC%TYPE, V_IMPORTE_INGRESADO NUMBER)

AS

BEGIN
    DECLARE
    
    V_MESES_TRANSCURRIDOS NUMBER;
    V_MESES_A_PAGAR NUMBER;
    V_PAGO_PROPORCIONAL NUMBER;
    V_TIPO_CUOTA CUOTAS.TIPO_CUOTA%TYPE;
    V_ANYO_VALIDEZ NUMBER;
    V_ANYO_SOCIO NUMBER;
    V_FECHA_NACI DATE;
    
    BEGIN
    --SELECT TIPO_CUOTA INTO V_TIPO_CUOTA FROM CUOTAS WHERE SOCIOS_COD_SOC=(SELECT COD_SOC FROM SOCIOS)
    --AND SOCIO_COD_SOCIO =V_COD_SOCIO;
    
    SELECT FECHA_NACI INTO V_FECHA_NACI FROM SOCIOS WHERE COD_SOC =V_COD_SOCIO; --> FECHA NACIMIENTO DEL USUARIO
    SELECT TRUNC((SYSDATE-V_FECHA_NACI)/365,0) INTO V_ANYO_SOCIO FROM DUAL; --> AÑOS DEL USUARIO
    SELECT ANYO_VALIDEZ INTO V_ANYO_VALIDEZ FROM CUOTAS WHERE SOCIOS_COD_SOC =V_COD_SOCIO; 
    SELECT TIPO_CUOTA INTO V_TIPO_CUOTA FROM CUOTAS WHERE SOCIOS_COD_SOC =V_COD_SOCIO;
    SELECT TO_NUMBER(TO_CHAR(SYSDATE,'MM')) INTO V_MESES_TRANSCURRIDOS FROM DUAL; --> meses transcurridos
    V_MESES_A_PAGAR := 12-V_MESES_TRANSCURRIDOS; 
   
   IF  V_ANYO_SOCIO>=  18 THEN --> AQUI DISCRIMINO A LOS SOCIOS QUE SON MAYORES DE 18 AÑOS Y ACTULIZO CUOTA Y QUITO SOCIO RESPONSABLE... ANTES DE ENTRAR EN LOS SIGUIENTES IF
   
        UPDATE SOCIOS
        SET TIPO_SOCIO='ADULTOS'
        WHERE COD_SOC =V_COD_SOCIO;
        
        UPDATE SOCIOS
        SET COD_SOCIO_RESPONSABLE =  NULL 
        WHERE COD_SOC =V_COD_SOCIO;
        
    END IF;
        
   
   
   IF V_TIPO_CUOTA='MENORES' THEN
    V_PAGO_PROPORCIONAL:= V_MESES_A_PAGAR *10 ;
   -- DBMS_OUTPUT.PUT_LINE(V_PAGO_PROPORCIONAL);
    
    
        
      IF  V_PAGO_PROPORCIONAL = V_IMPORTE_INGRESADO THEN
           
            UPDATE CUOTAS
            SET ANYO_VALIDEZ = V_ANYO_VALIDEZ+1
            WHERE SOCIOS_COD_SOC = V_COD_SOCIO;
           -- DBMS_OUTPUT.PUT_LINE(V_ANYO_VALIDEZ);
            
            UPDATE CUOTAS
            SET "SI_NO_PAGADO" = 'PAGADO'
            WHERE SOCIOS_COD_SOC = V_COD_SOCIO;
            
        END IF;
        
    END IF;
    
     IF V_TIPO_CUOTA='ADULTOS' THEN
    V_PAGO_PROPORCIONAL:= V_MESES_A_PAGAR*12;
    

    
        IF V_PAGO_PROPORCIONAL =  V_IMPORTE_INGRESADO THEN
        
        
            UPDATE CUOTAS
            SET ANYO_VALIDEZ = V_ANYO_VALIDEZ+1
            WHERE SOCIOS_COD_SOC = V_COD_SOCIO;
            
           
            UPDATE CUOTAS
            SET "SI_NO_PAGADO" = 'PAGADO'
            WHERE SOCIOS_COD_SOC = V_COD_SOCIO;
         
        END IF;
    
    END IF;
    
            IF V_TIPO_CUOTA='ADMINISTRADORES' THEN
            V_PAGO_PROPORCIONAL:= V_MESES_A_PAGAR*11;
    

    
        IF V_PAGO_PROPORCIONAL =  V_IMPORTE_INGRESADO THEN
        
            UPDATE CUOTAS
            SET ANYO_VALIDEZ = V_ANYO_VALIDEZ+1
            WHERE SOCIOS_COD_SOC = V_COD_SOCIO;
            
           
            UPDATE CUOTAS
            SET "SI_NO_PAGADO" = 'PAGADO'
            WHERE SOCIOS_COD_SOC = V_COD_SOCIO;
            
        END IF;
    
    END IF;
       
END;
    
END VALIDAR_CUOTA;


---------------------------------------- TRIGGER DE CONTROL DE USUARIOS -----------------------------------------------------

CREATE OR REPLACE TRIGGER CONTROL_USUARIO
AFTER LOGON 
ON SCHEMA
   
BEGIN
    INSERT INTO TABLA_CONTROL (NOMBRE,FECHA_INCIDENCIA,TEXTO )  VALUES(USER,SYSTIMESTAMP,NULL);

    
END CONTROL_USUARIO;

SHOW ERRORS;
        
 

-- INSERTAMOS VALORES EN LA TABLA CUOTAS --

--CREAMOS UNA TABLA --> PAGOS, PARA SABER LO QUE HA PAGADO

INSERT INTO CUOTAS VALUES('MENORES','NO PAGADO','01/01/2019',30,4);
INSERT INTO CUOTAS VALUES('MENORES','NO PAGADO','31/12/2019',30,9,70);

INSERT INTO CUOTAS VALUES('ADULTOS',NULL,2019,144,4,84);
INSERT INTO CUOTAS VALUES('ADMINISTRADOR',NULL,2019,132,4,77);

-- PONEMOS A PRUEBA LOS TRIGGERS PARA VER SI ACTULIZA LA CUOTA Y ANYO _VALIDEZ

EXECUTE VALIDAR_CUOTA_2(4,84);

SHOW ERRORS;
SET SERVEROUTPUT ON;

------------------------------------------- TRRIGGER COMPROBAR MOROSO -----------------------------------------------------

CREATE OR REPLACE TRIGGER COMPROBAR_MOROSO 
BEFORE INSERT ON ACTIVIDADES_SOCIOS
FOR EACH ROW

DECLARE
V_COD_SOCIO SOCIOS.COD_SOC%TYPE;
V_MOROSO SOCIOS.MOROSO%TYPE;

BEGIN

SELECT SOCIOS_COD_SOC INTO V_COD_SOCIO FROM ACTIVIDADES WHERE SOCIOS_COD_SOC =(SELECT COD_SOC FROM SOCIOS );
SELECT MOROSO INTO V_MOROSO FROM SOCIOS;

IF V_MOROSO = 'SI' THEN 
RAISE_APPLICATION_ERROR (-20001, 'CONTACTA CON UN ADMINISTRADOR PARA PAGAR TU SANCIÓN ANTES DE NADA.');


END IF;

END COMPROBAR_MOROSO;

SHOW ERRORS;

----------------------------------------- PROCEDURE MOROSO -----------------------------------------------------------------

CREATE OR REPLACE PROCEDURE MOROSO
AS

BEGIN 

    DECLARE
    V_FECHA_VIGENTE NUMBER; --> TIENE QUE SER DE TIPO NUMBER, PARA QUE PUEDA HACER --> V_FECHA_VIGENTE>V_AÑO_VALIDEZ
    V_ANYO_VALIDEZ NUMBER; --> TIENE QUE SER DE TIPO NUMBER 
    V_COD_SOC SOCIOS.COD_SOC%TYPE;
    
    BEGIN
        SELECT TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) INTO V_FECHA_VIGENTE FROM DUAL;
        SELECT ANYO_VALIDEZ INTO V_ANYO_VALIDEZ FROM CUOTAS WHERE SOCIOS_COD_SOC=(SELECT COD_SOC FROM SOCIOS);

        
        IF V_FECHA_VIGENTE>V_ANYO_VALIDEZ THEN
        
            UPDATE SOCIOS
            SET MOROSO='SI'
            WHERE COD_SOC=(SELECT SOCIOS_COD_SOC FROM CUOTAS);
            
        END IF;
END;

END MOROSO;
        
        
SHOW ERRORS;

----------------------- DETERMINAR AÑO BISIESTO------------------------

CREATE OR REPLACE FUNCTION esBisiesto(fecha date)
RETURN NUMBER


declare
 v_esBisiesto NUMBER(1,0) := 0;
 v_anyo NUMBER(4,0) := TO_NUMBER(TO_CHAR(fecha, 'YYYY'),'9999'); --Extrae el anyo
 
BEGIN


 IF (v_anyo MOD 4 =0) AND (v_anyo MOD 10 <> 0) OR (v_anyo MOD 400 = 0) THEN
  
  v_esBisiesto := 1;
  
 END IF;

    RETURN esBisiesto;
    
END;

show errors;

SELECT TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))FROM DUAL;



CREATE OR REPLACE PROCEDURE CREAR_ACTIVIDAD(V_COD_SOCIO IN SOCIOS.COD_SOC%TYPE, V_FECHA_INICIO IN DATE, V_FECHA_FIN IN DATE)
IS


BEGIN
        SELECT COD_SOC INTO V_COD_SOCIO FROM SOCIOS WHERE COD_SOC=V_COD_SOC;
        SELECT FECHA_INICIO INTO V_FECHA_INICIO FROM ACTIVIDADES WHERE FECHA_INICIO=FECHA_FIN;
        
        IF V_FECHA_INICIO
        
/*CREATE OR REPLACE TRIGGER CREAR_ACTIVIDAD
BEFORE INSERT ON ACTIVIDADES
FOR EACH ROW

DECLARE
    V_COD_SOC 
    V_FECHA_INICIO
    V_FECHA_FIN
    
BEGIN

    SELECT COD_SOC INTO V_COD_SOC FROM ACTIVIDADES WHERE COD_SOC=:NEW.COD.SOCIOS
    SELECT FECHA_INICIO INTO V_FECHA_INICIO FROM ACTIVIDADES WHERE FECHA_INICIO=:NEW.FECHA_INICIO;
    SELECT FECHA_FIN INTO V_FECHA_FIN FROM ACTIVIDADES WHERE FECHA_FIN=:NEW.FECHA_FIN;
    
    IF V_FECHA_INICIO=:NEW.FECHA_INICIO THEN
    RAISE_APLICATTION;
*/



DECLARE

V_X NUMBER;

BEGIN

SYS.DBMS_JOB.SUBMIT(

job        => X

,what       => 'MOROSO;'

,next_date  => to_date(trunc(sysdate,'yyyy'))

,interval   => 'trunc(sysdate,'yyyy')+365'

,no_parse   => FALSE

);

:JobNumber := to_char(X);

END;

select trunc(sysdate,'yyyy') from dual;
------------------------------------ PACKAGE --------------------------------------- 

CREATE OR REPLACE PACKAGE MENDI_TALDEA IS

-- PROCEDURE MOROSO

PROCEDURE MOROSO;

--PROCEDURE  VALIDAR_CUOTA

PROCEDURE VALIDAR_CUOTA (V_COD_SOCIO IN SOCIOS.COD_SOC%TYPE, V_IMPORTE_INGRESADO NUMBER);

--TRIGGER COMPROBAR MOROSO

TRIGGER COMPROBAR_MOROSO 

--TRIGGER CONTROL USUARIO

 TRIGGER VALIDAR_SOCIO






    



