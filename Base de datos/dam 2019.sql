
---------------------------------------------------- CREACIÓN DE TABLAS ----------------------------------------------------------

CREATE TABLE CALENDARIO(
    CALENDARIO_ID NUMBER PRIMARY KEY,
    ANYO DATE
);

CREATE TABLE JUNTA(
    FECHA_INI DATE UNIQUE NOT NULL,
    FECHA_FIN DATE UNIQUE NOT NULL,
    IMFORMACION VARCHAR2(128),     
    CONSTRAINT JUNTA_PK PRIMARY KEY(FECHA_INI,FECHA_FIN)
);

CREATE TABLE SOCIOS (
    COD_SOC NUMBER(9) PRIMARY KEY,
    NOMBRE VARCHAR2(24) NOT NULL,
    APELLIDOS VARCHAR2(24) NOT NULL,
    DNI VARCHAR2(9),
    FECHA_ALTA  DATE DEFAULT(SYSDATE) NOT NULL, CONSTRAINT FECHA_ALTA_CK CHECK(FECHA_ALTA>FECHA_NACI),
    TELEFONO NUMBER(12),
    EMAIL VARCHAR2(24) UNIQUE,
    FECHA_NACI DATE NOT NULL,
    TIPO_SOCIO VARCHAR2(24) DEFAULT('PENDIENTE') NOT NULL, CONSTRAINT TIPO_CK CHECK (TIPO_SOCIO = 'USUARIO' OR TIPO_SOCIO = 'ADMINISTRADOR' OR TIPO_SOCIO='PENDIENTE'),
    CARGO VARCHAR2(24) CONSTRAINT CARGO_CK CHECK (CARGO = 'PRESIDENTE' OR CARGO = 'VICEPRESIDENTE' OR CARGO = 'SECRETARIO' OR CARGO = 'TESORERO' OR CARGO = 'VOCAL'),
    PASSWD VARCHAR2(24) NOT NULL,
    FECHA_INICIO DATE,
    FECHA_FINAL DATE,
    COD_SOCIO_RESPONSABLE NUMBER (9,0) CONSTRAINT SOCIOS_SOC_RESP_FK REFERENCES SOCIOS (COD_SOC),
    MULTAS NUMBER(4,0) DEFAULT(0),
    TIPO_FALTAS VARCHAR2(24)DEFAULT('NO') CONSTRAINT FALTAS_GRAVES_CK CHECK (TIPO_FALTAS='GRAVE' OR TIPO_FALTAS='LEVE' OR TIPO_FALTAS='NO'),
    MOROSO VARCHAR2(2) DEFAULT ('NO'),
    NOTAS VARCHAR2(300) DEFAULT (NULL)
);

CREATE TABLE CUOTAS(
    COD_CUOTA VARCHAR2(24) PRIMARY KEY,
    TIPO_CUOTA VARCHAR2(24) CONSTRAINT TIPO_CUOTA_CK CHECK (TIPO_CUOTA = 'MENORES' OR TIPO_CUOTA= 'ADULTOS' OR TIPO_CUOTA= 'ADMINISTRADOR'),
    SI_NO_PAGADO VARCHAR2(24) DEFAULT ('NO_PAGADO'), CONSTRAINT PAGADO_CK CHECK (SI_NO_PAGADO='SI_PAGADO' OR SI_NO_PAGADO='NO_PAGADO'),
    ANYO_VALIDEZ NUMBER(4) NOT NULL,
    INFORMACION_PAGO NUMBER(24),
    SOCIO_QUE_PAGA NUMBER(9) NOT NULL CONSTRAINT SOC_COD_FK REFERENCES SOCIOS(COD_SOC),
    IMPORTE_INGRESADO NUMBER(9) DEFAULT (0)
);

CREATE TABLE ACTIVIDADES(
    COD_ACTIVI VARCHAR2(24) PRIMARY KEY,
    TIPO VARCHAR2(24) NOT NULL CONSTRAINT TIPO_ACTIVIDADES_CK CHECK (TIPO = 'SALIDA_AL_MONTE' OR TIPO = 'ALBERFGUE_FIN_DE_SEMANA' OR TIPO = 'REUNION' OR TIPO = 'COMIDA' OR TIPO = 'OTROS'),
    DIFICULTAD  VARCHAR(24) NOT NULL CONSTRAINT DIFICULTAD_CK CHECK (DIFICULTAD = 'ALTA' OR DIFICULTAD = 'MEDIA' OR DIFICULTAD = 'BAJA'),
    SOCIO_CREA_ACTIVIDAD NUMBER(9) NOT NULL CONSTRAINT SOC_ACTIVI_FK REFERENCES SOCIOS(COD_SOC),
    PRECIO NUMBER NOT NULL,
    MOTIVO_SUSPENSION VARCHAR2(200),
    COD_SOCIO_APUNTADO NUMBER(9) NOT NULL CONSTRAINT SOC_APUNTADO_FK REFERENCES SOCIOS(COD_SOC),--> SOCIO APUNTADO, TIENE QUE ESTAR REFERIDO A --> "COD_SOC" DE LA TABLA SOCIOS
    FECHA_INICIO DATE NOT NULL,
    FECHA_FIN DATE NOT NULL,
    ACEPTADA VARCHAR2(24) DEFAULT('NO') NOT NULL --> EL ADMINISTRADOR ACEPTA LA ACTIVIDAD O NO, POR DEFECTO SIEMPRE ES 'NO',`PARA QUE LA REVISE
);


CREATE TABLE ACTIVIDADES_SOCIOS(
    ACTIVIDADES_COD_ACTIVI VARCHAR2(8) CONSTRAINT ACTIVIDADES_FK REFERENCES ACTIVIDADES(COD_ACTIVI), 
                                       CONSTRAINT ACTIVIDADES_SOCIOS_PK PRIMARY KEY(SOCIO_CREA,ACTIVIDADES_COD_ACTIVI),
    SOCIO_APUNTADO NUMBER(9) CONSTRAINT SOCIO_APUNTADO_FK REFERENCES SOCIOS(COD_SOC),
    SOCIO_CREA NUMBER(9) CONSTRAINT SOCIOS_CREA_FK REFERENCES SOCIOS(COD_SOC)
);

SELECT * FROM USER_CONSTRAINTS;

------ CREAR UNA SEQUENCIA PARA COD_SOCIO Y OTRA PARA COD_ACTIVIDAD Y CALENDARIO_ID -----------------------------


CREATE SEQUENCE INCREMENTO_SOCIO
    INCREMENT BY 1
    START WITH 1;

CREATE SEQUENCE INCREMENTO_ACTIVIDAD
    INCREMENT BY 1
    START WITH 1;
    
CREATE SEQUENCE INCREMENTO_CUOTA
    INCREMENT BY 1
    START WITH 1;

---------------------------------------------------------- PRUEBAS DEINSERCIONES--------------------------------------------------------------

--> HAGO PRUEBAS  CON 7 POSIBLES SOCIOS (lOS PONGO A PRUEBA CON EL TEMA DE LA EDAD) --> AL FINAL 3 AÑADIDOS Y 4 ERRORES --> BIEN !!!
--> TENER EN CUENTA QUE EN EL CAMPO --> "CARGO" PUEDE SER "NULL" (NO ESTÁ EN NINGÚN CARGO DE LA JUNTA) Y POR DEFECTO NO TIENE "FECHA DE INICIO" NI "FECHA FIN" EN LA JUNTA

INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'PACO','RUIZ','1234578A',SYSDATE,623586975,'pruiz@gmail.com','10/05/1971','USUARIO',NULL,'12345',NULL,NULL,NULL,DEFAULT,'NO',DEFAULT,'Primer socio Fundador de la Asociación de Montaña "Mendi Taldea"'); --> ALUMNO RESPONSABLE MAYOR DE 18  -->OK
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'FERNANDO','LOPEZ',NULL,'10/05/2019',NULL,NULL,'10/05/1996','ADMINISTRADOR',NULL,'12345',NULL,NULL,1,DEFAULT,'NO',DEFAULT,'PPPP'); --> USUARIO MENOR DE 4 AÑOS CON SOCIO RESPONSABLE MAYOR DE 18 SOCIO=1 --> ERROR
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'ION','PEREZ','56123782C','10/05/2012',654654987,'iperez@gmail','10/05/2007','USUARIO',NULL,NULL,NULL,NULL,DEFAULT,'NO',DEFAULT,DEFAULT); --> ENTRE 4 Y 18 AÑOS SIN SOCIO RESPONSABLE(NULL) --> ERROR
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'LUIS','MENDEZ','89562345E','10/05/2010',789365142,'lmendez@gmail.com','10/05/2006','USUARIO',NULL,NULL,NULL,1,DEFAULT,'NO',DEFAULT,DEFAULT); --> MENOR DE 18 AÑOS CON RESPONSABLE MAYOR DE 18 AÑOS --> OK
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'ALFONSO','GONZALEZ','78451256N','10/05/2017',NULL,NULL,'10/05/2010','USUARIO',NULL,NULL,NULL,4); --> MENOR DE 18 AÑOS Y SU SOCIO RESPONSABLE TIENE MENOS DE 18 AÑOS, QUE ES EL SOCIO NUMERO 4  --> ERROR
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'LEONARDO','SAGUNTO',NULL,'10/05/2019',NULL,NULL,'10/05/2018','USUARIO',NULL,NULL,NULL,NULL); --> MENOR DE 4 AÑOS --> ERROR
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'FERNANDO','LOPEZ','78321654G','10/05/2017',623456951,'flopez@gmail.com','10/05/2012','USUARIO',NULL,NULL,NULL,1);--> MENOR DE 18 Y RESPONSABLE MAYOR DE 18, SOCIO=1 --> OK


-- PRUEBA PARA QUE SALTE EL JOB A LAS 19:10 DEL DIA 22/05/2019 --> INSERTO MENOR QUE HOY VA A CUMPLIR 18 AÑOS Y SE DIO DE ALTA (10/05/2017) SIENDO MENOR DE 18  AÑOS 
-- HAGO EL INSERT TAMBIEN EN LA TABLA CUOTAS --> TIPO_CUOTA=MENORES Y ANYO_VALIDEZ=2019 (PARA QUE SEA CORRECTO)
-- INSERTAR SOCIO MOROSO
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'CASI_MAYOR','MENOR','23581254G','10/05/2017',623579512,'cmayor@gmail.com','22/05/2001','USUARIO',NULL,'4444',NULL,NULL,1,DEFAULT,DEFAULT,DEFAULT,DEFAULT);--> SOCIO 23 DE MENORES A ADULTOS
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'MOROSEZ','JETEZ','45621254G','10/05/2016',625879512,'mjetez@gmail.com','22/05/1980','USUARIO',NULL,'3333',NULL,NULL,null,DEFAULT,DEFAULT,'SI',DEFAULT); --> SOCIO 24 MOROSO
INSERT INTO CUOTAS VALUES(INCREMENTO_CUOTA.NEXTVAL,'MENORES','SI_PAGADO',2019,120,23,120); --> SOCIO 23 --> DE MENORES A ADULTOS, EN EL AÑO VIGENTE SI CUMPLE 18 AÑOS, SE LE COBRA LA TARIFA DE "MENORES" (120) SE LE CAMBIA EL TIPO_CUOOTA A "ADULTOS" Y SE LE COBRA EN EL AÑO 2020 LA TARIFA DE "ADULTOS".
INSERT INTO CUOTAS VALUES(INCREMENTO_CUOTA.NEXTVAL,'ADULTOS','NO_PAGADO',2018,144,24,0); --> SOCIO 24 --> MOROSO

--MAS INSERCIONES CORRECTAS PARA FORMAR UNA PEQUEÑA BASE DE DATOS:

INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'FEDERICO','SAGASTI','12521362A','01/02/2019',776524896,'fsagasti@gmail.com','15/05/2012','USUARIO',NULL,NULL,NULL,4);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'ASIER','MENENDEZ','35127813A','05/05/2019',669586127,'amenendez@msm.com','17/02/2013','USUARIO',NULL,NULL,NULL,1);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'ANDER','RODRIGUEZ','69312541A','02/02/2000',725651753,'arodriguez@outlook.com','14/03/1978','USUARIO',NULL,NULL,NULL,NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'JUANAN','RUIZ','11223344A','01/03/1995',725986324,'jruiz@gmail.com','13/08/1984','USUARIO',NULL,NULL,NULL,9);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'GUILLE','BOTET','55667788A','02/05/2006',784256398,'gbotet@yahoo.es','12/06/1985','USUARIO',NULL,NULL,NULL,NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'FERMÍN','RAMIREZ','99223365A','03/06/2010',789123652,'framirez@gmail.com','10/05/1999','USUARIO',NULL,NULL,NULL,12);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'IRUNE','MENDEZ','16523889A','01/02/2019',667895236,'imendez@outlook.com','10/01/2001','USUARIO',NULL,NULL,NULL,NULL);

-- INSERTO TODOSLOS MIEMBROS DE LA JUNTA,EN TOTAL 9, TODOS MAYORES DE EDAD Y QUE CUANDO SE DIERON DE ALTA TAMBIEN ERAN MAYORES DE 18 AÑOS

INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'PEPE','ARIAS','65412345P','17/02/2011',666123852,'parias@outlook.com','14/02/1956','ADMINISTRADOR','PRESIDENTE','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'MARIA','ROJO','63561786A','07/02/1990',623524896,'mrojo@gmail.com','10/08/1965','ADMINISTRADOR','VICEPRESIDENTE','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'IOSU','MACIAS','61232678S','17/02/2002',639963843,'imacias@yahoo.es','29/03/1975','ADMINISTRADOR','TESORERO','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'ALFONSO','SEGUNDO','66632195N','17/02/1992',699275123,'asegundo@msm.com','02/09/1971','ADMINISTRADOR','SECRETARIO','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'MARISA','GOMEZ','62356285B','17/02/1989',696562378,'mgomez@gmail.com','11/04/1968','ADMINISTRADOR','VOCAL','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'LUISA','AGIRRE','66578932K','17/02/2009',666236782,'lagirre@outlook.com','13/02/1989','ADMINISTRADOR','VOCAL','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'ANDRES','NUÑEZ','65412345R','17/02/2009',689213965,'anuñez@yahoo.es','14/02/1990','ADMINISTRADOR','VOCAL','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'SARA','LEKUONA','60023501S','17/02/2000',653963147,'slekuona@outlook.com','17/02/1978','ADMINISTRADOR','VOCAL','01/09/2018','01/09/2019',NULL);
INSERT INTO SOCIOS VALUES(INCREMENTO_SOCIO.NEXTVAL,'JACINTO','MARTIN','65412345H','17/02/2010',699623859,'jmartin@msm.com','20/02/1980','ADMINISTRADOR','VOCAL','01/09/2018','01/09/2019',NULL);


----------------------------------------------------TRIGGERS--------------------------------------------------------------------


-- HAGO UN TRIGGER PARA CONTROLAR LA EDAD DE LOS USUARIOS QUE QUIEREN REGISTRARSE COMO SOCIOS:

CREATE OR REPLACE TRIGGER VALIDAR_SOCIO
BEFORE INSERT ON SOCIOS
FOR EACH ROW

DECLARE
    V_AÑOS_USUARIO_NUEVO NUMBER; -- AQUI SACO LOS AÑOS DEL USUARIO QUE QUIERE REGISTRARSE, RESTANDO LA FECHA ACTUAL MENOS SU FECHA CUMPLEAÑOS
    V_AÑOS_RESPONSABLE NUMBER; --> AÑOS DEL SOCIO RESPONSABLE
    
BEGIN

    --> METER COLUMNA NUEVA DE "SOCIO_TUTOR" O "COD_SOCIO_RESPONSABLE" EN LA TABALA SOCIOS, QUE ES QUE SE VA A RESPONSABILIZAR DEL MENOR
    
    
    SELECT TRUNC((SYSDATE-:NEW.FECHA_NACI)/365,0) INTO V_AÑOS_USUARIO_NUEVO FROM DUAL; --> "DUAL" --> TABLA TEMPORAL --> AÑOS DEL NUEVO SOCIO
 
    --> COMPROBAR QUE EL SOCIO NUEVO TIENE MENOS DE 4 AÑOS
    
    IF V_AÑOS_USUARIO_NUEVO<4 THEN
    
        RAISE_APPLICATION_ERROR(-20500, 'EL USUARIO TIENE MENOS DE 4 AÑOS');
       
    END IF;

    --> ES MENOR DE 18 AÑOS Y NO TIENE SOCIO RESPONSABLE (NULL)
    
        IF V_AÑOS_USUARIO_NUEVO<18 AND :NEW.COD_SOCIO_RESPONSABLE IS NULL THEN
            RAISE_APPLICATION_ERROR(-20300, 'EL USUARIO TIENE QUE TENER UN SOCIO RESPONSABLE ');
           
        END IF;
    
    --> ES MENOR DE 18 Y TIENE SOCIO RESPONSABLE (NOT NULL), LE DAMOS VALOR A LA VARIABLE "V_AÑOS_RESPONSABLE", PARA SABER LOS AÑOS DEL SOCIO RESPONSABLE
    IF V_AÑOS_USUARIO_NUEVO<18 AND :NEW.COD_SOCIO_RESPONSABLE IS NOT NULL THEN
    
        SELECT TRUNC((SYSDATE-FECHA_NACI)/365,0) INTO V_AÑOS_RESPONSABLE FROM SOCIOS WHERE :NEW.COD_SOCIO_RESPONSABLE=COD_SOC; --> AÑOS DEL SOCIO RESPONSABLE
    
        --> COMPROBAMOS LA EDAD DEL SOCIO RESPONSABLE PARA VER SI ES MENOR DE 18 AÑOS
        IF V_AÑOS_RESPONSABLE<18 THEN
            RAISE_APPLICATION_ERROR(-20400, 'EL USUARIO TIENE QUE TENER UN SOCIO RESPONSABLE MAYOR DE EDAD');
          
        END IF;
        
    END IF;
COMMIT;   
END VALIDAR_SOCIO; 


----------------------------------------TRIGGER VALIDAR CUOTA --------------------------------------------------------------

CREATE OR REPLACE PROCEDURE VALIDAR_CUOTA (V_COD_SOCIO IN SOCIOS.COD_SOC%TYPE, V_IMPORTE_A_INGRESAR NUMBER)

AS

BEGIN
    DECLARE
    V_SOCIO_RESPONSABLE SOCIOS.COD_SOC%TYPE;
    V_MESES_TRANSCURRIDOS NUMBER;
    V_MESES_A_PAGAR NUMBER;
    V_PAGO_PROPORCIONAL NUMBER;
    V_TIPO_CUOTA CUOTAS.TIPO_CUOTA%TYPE;
    V_ANYO_VALIDEZ NUMBER;
    V_ANYO_SOCIO NUMBER;
    V_FECHA_NACI DATE;
    V_CUOTA_MENORES NUMBER:=120;
    V_CUOTA_ADULTOS NUMBER:=144;
    V_CUOTA_ADMINISTRADORES NUMBER:=132;
    
    BEGIN

        SELECT COD_SOCIO_RESPONSABLE INTO V_SOCIO_RESPONSABLE FROM SOCIOS WHERE V_COD_SOCIO=COD_SOCIO_RESPONSABLE;
        SELECT FECHA_NACI INTO V_FECHA_NACI FROM SOCIOS WHERE COD_SOC=V_COD_SOCIO; --> FECHA NACIMIENTO DEL USUARIO
        SELECT TRUNC((SYSDATE-V_FECHA_NACI)/365,0) INTO V_ANYO_SOCIO FROM DUAL; --> AÑOS DEL USUARIO
        SELECT ANYO_VALIDEZ INTO V_ANYO_VALIDEZ FROM CUOTAS WHERE SOCIO_QUE_PAGA=V_COD_SOCIO; --> AÑO DE VALIDEZ DE LA CUOTA DEL SOCIO QUE PAGA 
        SELECT TIPO_CUOTA INTO V_TIPO_CUOTA FROM CUOTAS WHERE SOCIO_QUE_PAGA =V_COD_SOCIO; --> TIPO DE CUOTA DEL SOCIO QUE PAGA
        SELECT TO_NUMBER(TO_CHAR(SYSDATE,'MM')) INTO V_MESES_TRANSCURRIDOS FROM DUAL; --> MESES TRANSCURRIDOS DESDE PRINCIPIOS DE AÑO
    
    V_MESES_A_PAGAR := 12-V_MESES_TRANSCURRIDOS; 
   
   IF  V_ANYO_SOCIO>=  18 THEN --> AQUI DISCRIMINO A LOS SOCIOS QUE SON MAYORES DE 18 AÑOS Y ACTUALIZO CUOTA Y QUITO SOCIO RESPONSABLE (NULL)...  Y ACTUALIZADO DATOS EN EL SERVIDOR --> "COMMIT") ANTES DE ENTRAR EN LOS SIGUIENTES IF
   
        UPDATE SOCIOS
        SET TIPO_SOCIO='ADULTOS'
        WHERE COD_SOC =V_COD_SOCIO;
        
        UPDATE SOCIOS
        SET COD_SOCIO_RESPONSABLE =  NULL 
        WHERE COD_SOC =V_COD_SOCIO;
        
    END IF;
    
    COMMIT;
        
 
   IF V_TIPO_CUOTA='MENORES' THEN
    V_PAGO_PROPORCIONAL:= V_MESES_A_PAGAR *V_CUOTA_MENORES/12 ;
   -- DBMS_OUTPUT.PUT_LINE(V_PAGO_PROPORCIONAL);
    
    
        
      IF  V_PAGO_PROPORCIONAL = V_IMPORTE_A_INGRESAR THEN
           
            UPDATE CUOTAS
            SET ANYO_VALIDEZ = V_ANYO_VALIDEZ+1
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
           -- DBMS_OUTPUT.PUT_LINE(V_ANYO_VALIDEZ);
            
            UPDATE CUOTAS
            SET "SI_NO_PAGADO" = 'PAGADO'
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
            
            UPDATE CUOTAS
            SET IMPORTE_INGRESADO=V_CUOTA_MENORES
            WHERE SOCIO_QUE_PAGA=V_SOCIO_RESPONSABLE; --> AQUI "V_SOCIO_RESPONSABLE" --> ES EL "SOCIO_QUE_PAGA" A UN MENOR --> ES EL SOCIO RESPONSABLE
            
        END IF;
        
    END IF;
    
     IF V_TIPO_CUOTA='ADULTOS' THEN
    V_PAGO_PROPORCIONAL:= V_MESES_A_PAGAR*V_CUOTA_ADULTOS/12;
    

    
        IF V_PAGO_PROPORCIONAL =  V_IMPORTE_A_INGRESAR THEN
        
        
            UPDATE CUOTAS
            SET ANYO_VALIDEZ = V_ANYO_VALIDEZ+1
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
            
           
            UPDATE CUOTAS
            SET "SI_NO_PAGADO" = 'PAGADO'
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
            
            UPDATE CUOTAS
            SET IMPORTE_INGRESADO=V_CUOTA_ADULTOS
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
         
        END IF;
    
    END IF;
    
            IF V_TIPO_CUOTA='ADMINISTRADORES' THEN
            V_PAGO_PROPORCIONAL:= V_MESES_A_PAGAR*V_CUOTA_ADMINISTRADORES/12;
    
    
        IF V_PAGO_PROPORCIONAL =  V_IMPORTE_A_INGRESAR THEN
        
            UPDATE CUOTAS
            SET ANYO_VALIDEZ = V_ANYO_VALIDEZ+1
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
            
           
            UPDATE CUOTAS
            SET "SI_NO_PAGADO" = 'PAGADO'
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
            
            UPDATE CUOTAS
            SET IMPORTE_INGRESADO=V_CUOTA_ADMINISTRADORES
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
            
        END IF;
    
    END IF;
       
END;
    COMMIT;
END VALIDAR_CUOTA;



-- INSERTAMOS VALORES EN LA TABLA CUOTAS --

INSERT INTO CUOTAS VALUES(INCREMENTO_CUOTA.NEXTVAL,'MENORES','SI_PAGADO',2019,120,23,120); --> SOCIO 23 --> DE MENORES A ADULTOS, EN EL AÑO VIGENTE SI CUMPLE 18 AÑOS, SE LE COBRA LA TARIFA DE "MENORES" (120) SE LE CAMBIA EL TIPO_CUOOTA A "ADULTOS" Y SE LE COBRA EN EL AÑO 2020 LA TARIFA DE "ADULTOS".
INSERT INTO CUOTAS VALUES(INCREMENTO_CUOTA.NEXTVAL,'ADULTOS','NO_PAGADO',2018,144,24,0); --> SOCIO 24 --> MOROSO


----------------------------------- TRIGGER COMPROBAR_MOROSO----------------------------------------------------

-- antes de hacer una inserción en la tabla de actividades, HAY QUE COMPROBAR 2 COSAS:


-- 1 COMPROBAR QUE EL SOCIO QUE CREA LA ACTIVIDAD  SI ES MOROSO
-- 2 COMPROBAR QUE EL SOCIO QUE SE APUNTA A LA ACTIVIDAD  SI ES MOROSO

CREATE OR REPLACE TRIGGER COMPROBAR_MOROSO 
BEFORE INSERT ON ACTIVIDADES
FOR EACH ROW

DECLARE
V_SOCIO_CREA_ACTIVIDAD SOCIOS.COD_SOC%TYPE;
V_MOROSO SOCIOS.MOROSO%TYPE;
V_IMPORTE_INGRESADO CUOTAS.IMPORTE_INGRESADO%TYPE; 
V_SOCIO_APUNTADO SOCIOS.COD_SOC%TYPE;

BEGIN


SELECT IMPORTE_INGRESADO INTO V_IMPORTE_INGRESADO FROM CUOTAS C, SOCIOS S WHERE C.SOCIO_QUE_PAGA=S.COD_SOC; --> EL "IMPORTE_INGRESADO" DE LA TABLA CUOTAS QUE HACE REFERENCIA AL "COD_SOC" DE LA TABLA SOCIOS
SELECT COD_SOCIO_APUNTADO INTO V_SOCIO_APUNTADO FROM ACTIVIDADES A ,SOCIOS S WHERE :NEW.COD_SOCIO_APUNTADO =S.COD_SOC; --> EL NUEVO VALOR INSERTADO EN LA TABLA  ACTIVIDADES --> ":NEW.COD_SOCIO_APUNTADO" QUE HACE REFERENCIA AL "COD_SOC" DE LA TABLA SOCIOS
SELECT SOCIO_CREA_ACTIVIDAD INTO V_SOCIO_CREA_ACTIVIDAD FROM ACTIVIDADES A, SOCIOS S WHERE :NEW.SOCIO_CREA_ACTIVIDAD =S.COD_SOC; --> EL NUEVO VALOR INSERTADO EN LA TABLA  ACTIVIDADES --> ":NEW.SOCIO_CREA_ACTIVIDAD" QUE HACE REFERENCIA AL "COD_SOC" DE LA TABLA SOCIOS
SELECT MOROSO INTO V_MOROSO FROM SOCIOS S, ACTIVIDADES A WHERE :NEW.SOCIO_CREA_ACTIVIDAD=S.COD_SOC OR :NEW.COD_SOCIO_APUNTADO =S.COD_SOC; --> MIRAR EN LA TABLA MOROSO --> AL INSERTAR ":NEW.SOCIO_CREA_ACTIVIDAD" O ":NEW.COD_SOCIO_APUNTADO"


IF V_MOROSO = 'SI' OR V_IMPORTE_INGRESADO=0 THEN  --> COMPROBAR EN LA COLUMNA MOROSO DE LA TABLA SOCIOS QUE LOS NUEVOS SOCIOS INSERTADOS EN LA TABLA ACTIVIDADES --> ":NEW.SOCIO_CREA_ACTIVIDAD" Y ":NEW.COD_SOCIO_APUNTADO" SON MOROSOS O EL IMPORTE INGRESAADO ES 0
RAISE_APPLICATION_ERROR (-20001, 'CONTACTA CON UN ADMINISTRADOR PARA PAGAR TU SANCIÓN ANTES DE NADA.');

END IF;
COMMIT;

END COMPROBAR_MOROSO;

----------------------------------------- PROCEDURE MOROSO -----------------------------------------------------------------

CREATE OR REPLACE PROCEDURE MOROSO
AS

BEGIN 

    DECLARE
    V_FECHA_VIGENTE NUMBER; --> TIENE QUE SER DE TIPO NUMBER, PARA QUE PUEDA HACER OPERACIONES: --> V_FECHA_VIGENTE>V_AÑO_VALIDEZ
    V_ANYO_VALIDEZ NUMBER; --> TIENE QUE SER DE TIPO NUMBER 
    V_COD_SOC SOCIOS.COD_SOC%TYPE;
    V_PRIMER_DIA_ANYO NUMBER;
    
    
    BEGIN
    
        SELECT TO_NUMBER(TO_CHAR(sysdate,'ddd'))INTO V_PRIMER_DIA_ANYO FROM DUAL;
        SELECT TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) INTO V_FECHA_VIGENTE FROM DUAL; --> TE COGE EL AÑO VIGENTE Y TE LO PASA A NUMBER
        SELECT ANYO_VALIDEZ INTO V_ANYO_VALIDEZ FROM CUOTAS C, SOCIOS S WHERE C.SOCIO_QUE_PAGA=S.COD_SOC;

        
        IF V_FECHA_VIGENTE>V_ANYO_VALIDEZ THEN
        
            UPDATE SOCIOS
            SET MOROSO='SI'
            WHERE COD_SOC=(SELECT SOCIO_QUE_PAGA FROM CUOTAS);
            
            END IF;
            IF (V_PRIMER_DIA_ANYO =1 OR V_PRIMER_DIA_ANYO =0) THEN 
            EXECUTE IMMEDIATE 'TRUNCATE TABLE JUNTA';
            END IF;
        
END;
COMMIT;
END MOROSO;

SELECT TO_CHAR(SYSDATE,'ddd') FROM DUAL;
SELECT TO_NUMBER(TO_CHAR(sysdate,'ddd')) FROM DUAL;
SELECT TO_NUMBER(TO_CHAR('01/01/2019','ddd')) FROM DUAL;

       select trunc(sysdate,'yyyy') from dual;
       SYSDATE;
       


        

------------------------------------------ PACKAGE-------------------------------------------------------- 

---CABECERA----

CREATE OR REPLACE PACKAGE MENDI_TALDEA IS

PROCEDURE MOROSO;

PROCEDURE VALIDAR_CUOTA (V_COD_SOCIO IN SOCIOS.COD_SOC%TYPE, V_IMPORTE_A_INGRESAR NUMBER);

END MENDI_TALDEA;


CREATE OR REPLACE PACKAGE BODY MENDI_TALDEA AS
PROCEDURE MOROSO
AS

BEGIN 

    DECLARE
    V_FECHA_VIGENTE NUMBER; --> TIENE QUE SER DE TIPO NUMBER, PARA QUE PUEDA HACER OPERACIONES: --> V_FECHA_VIGENTE>V_AÑO_VALIDEZ
    V_ANYO_VALIDEZ NUMBER; --> TIENE QUE SER DE TIPO NUMBER 
    V_COD_SOC SOCIOS.COD_SOC%TYPE;
    V_PRIMER_DIA_ANYO NUMBER;
    
    
    BEGIN
    
        SELECT TO_NUMBER(TO_CHAR(sysdate,'ddd'))INTO V_PRIMER_DIA_ANYO FROM DUAL;
        SELECT TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) INTO V_FECHA_VIGENTE FROM DUAL; --> TE COGE EL AÑO VIGENTE Y TE LO PASA A NUMBER
        SELECT ANYO_VALIDEZ INTO V_ANYO_VALIDEZ FROM CUOTAS C, SOCIOS S WHERE C.SOCIO_QUE_PAGA=S.COD_SOC;

        
        IF V_FECHA_VIGENTE>V_ANYO_VALIDEZ THEN
        
            UPDATE SOCIOS
            SET MOROSO='SI'
            WHERE COD_SOC=(SELECT SOCIO_QUE_PAGA FROM CUOTAS);
            
            END IF;
            IF (V_PRIMER_DIA_ANYO =1 OR V_PRIMER_DIA_ANYO =0) THEN 
            EXECUTE IMMEDIATE 'TRUNCATE TABLE JUNTA';
            END IF;
        
END;
COMMIT;
END MOROSO;



PROCEDURE VALIDAR_CUOTA (V_COD_SOCIO IN SOCIOS.COD_SOC%TYPE, V_IMPORTE_A_INGRESAR NUMBER)

AS

BEGIN
    DECLARE
    V_SOCIO_RESPONSABLE SOCIOS.COD_SOC%TYPE;
    V_MESES_TRANSCURRIDOS NUMBER;
    V_MESES_A_PAGAR NUMBER;
    V_PAGO_PROPORCIONAL NUMBER;
    V_TIPO_CUOTA CUOTAS.TIPO_CUOTA%TYPE;
    V_ANYO_VALIDEZ NUMBER;
    V_ANYO_SOCIO NUMBER;
    V_FECHA_NACI DATE;
    V_CUOTA_MENORES NUMBER:=120;
    V_CUOTA_ADULTOS NUMBER:=144;
    V_CUOTA_ADMINISTRADORES NUMBER:=132;
    
    BEGIN

        
    
        SELECT COD_SOCIO_RESPONSABLE INTO V_SOCIO_RESPONSABLE FROM SOCIOS WHERE V_COD_SOCIO=COD_SOCIO_RESPONSABLE;
        SELECT FECHA_NACI INTO V_FECHA_NACI FROM SOCIOS WHERE COD_SOC=V_COD_SOCIO; --> FECHA NACIMIENTO DEL USUARIO
        SELECT TRUNC((SYSDATE-V_FECHA_NACI)/365,0) INTO V_ANYO_SOCIO FROM DUAL; --> AÑOS DEL USUARIO
        SELECT ANYO_VALIDEZ INTO V_ANYO_VALIDEZ FROM CUOTAS WHERE SOCIO_QUE_PAGA=V_COD_SOCIO; --> AÑO DE VALIDEZ DE LA CUOTA DEL SOCIO QUE PAGA 
        SELECT TIPO_CUOTA INTO V_TIPO_CUOTA FROM CUOTAS WHERE SOCIO_QUE_PAGA =V_COD_SOCIO; --> TIPO DE CUOTA DEL SOCIO QUE PAGA
        SELECT TO_NUMBER(TO_CHAR(SYSDATE,'MM')) INTO V_MESES_TRANSCURRIDOS FROM DUAL; --> MESES TRANSCURRIDOS DESDE PRINCIPIOS DE AÑO
    
    V_MESES_A_PAGAR := 12-V_MESES_TRANSCURRIDOS; 
   
   IF  V_ANYO_SOCIO>=  18 THEN --> AQUI DISCRIMINO A LOS SOCIOS QUE SON MAYORES DE 18 AÑOS Y ACTUALIZO CUOTA Y QUITO SOCIO RESPONSABLE (NULL)...  Y ACTUALIZADO DATOS EN EL SERVIDOR --> "COMMIT") ANTES DE ENTRAR EN LOS SIGUIENTES IF
   
        UPDATE SOCIOS
        SET TIPO_SOCIO='ADULTOS'
        WHERE COD_SOC =V_COD_SOCIO;
        
        UPDATE SOCIOS
        SET COD_SOCIO_RESPONSABLE =  NULL 
        WHERE COD_SOC =V_COD_SOCIO;
        
    END IF;
    
    COMMIT;
        
 
   IF V_TIPO_CUOTA='MENORES' THEN
    V_PAGO_PROPORCIONAL:= V_MESES_A_PAGAR *V_CUOTA_MENORES/12 ;
   -- DBMS_OUTPUT.PUT_LINE(V_PAGO_PROPORCIONAL);
    
    
        
      IF  V_PAGO_PROPORCIONAL = V_IMPORTE_A_INGRESAR THEN
           
            UPDATE CUOTAS
            SET ANYO_VALIDEZ = V_ANYO_VALIDEZ+1
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
           -- DBMS_OUTPUT.PUT_LINE(V_ANYO_VALIDEZ);
            
            UPDATE CUOTAS
            SET "SI_NO_PAGADO" = 'PAGADO'
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
            
            UPDATE CUOTAS
            SET IMPORTE_INGRESADO=V_CUOTA_MENORES
            WHERE SOCIO_QUE_PAGA=V_SOCIO_RESPONSABLE; --> AQUI "V_SOCIO_RESPONSABLE" --> ES EL "SOCIO_QUE_PAGA" A UN MENOR --> ES EL SOCIO RESPONSABLE
            
        END IF;
        
    END IF;
    
     IF V_TIPO_CUOTA='ADULTOS' THEN
    V_PAGO_PROPORCIONAL:= V_MESES_A_PAGAR*V_CUOTA_ADULTOS/12;
    

    
        IF V_PAGO_PROPORCIONAL =  V_IMPORTE_A_INGRESAR THEN
        
        
            UPDATE CUOTAS
            SET ANYO_VALIDEZ = V_ANYO_VALIDEZ+1
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
            
           
            UPDATE CUOTAS
            SET "SI_NO_PAGADO" = 'PAGADO'
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
            
            UPDATE CUOTAS
            SET IMPORTE_INGRESADO=V_CUOTA_ADULTOS
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
         
        END IF;
    
    END IF;
    
            IF V_TIPO_CUOTA='ADMINISTRADORES' THEN
            V_PAGO_PROPORCIONAL:= V_MESES_A_PAGAR*V_CUOTA_ADMINISTRADORES/12;
    
    
        IF V_PAGO_PROPORCIONAL =  V_IMPORTE_A_INGRESAR THEN
        
            UPDATE CUOTAS
            SET ANYO_VALIDEZ = V_ANYO_VALIDEZ+1
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
            
           
            UPDATE CUOTAS
            SET "SI_NO_PAGADO" = 'PAGADO'
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
            
            UPDATE CUOTAS
            SET IMPORTE_INGRESADO=V_CUOTA_ADMINISTRADORES
            WHERE SOCIO_QUE_PAGA = V_COD_SOCIO;
            
        END IF;
    
    END IF;
    
       
END;
   

      COMMIT;
END VALIDAR_CUOTA;


END MENDI_TALDEA;


------------------------------------- JOB , QUE SE EJECUTA EL PRIMER DIA DEL AÑO PARA ACTUALIZAR CUOTAS (MENORES QUE PASAN A ADULTOS) Y MOROSOS-------------------------


BEGIN
DBMS_SCHEDULER.CREATE_JOB(
    JOB_NAME => 'VALIDAR_CUOTA_JOB',
    JOB_TYPE => 'PLSQL_BLOCK',
    JOB_ACTION => 'VALIDAR_CUOTA',
    START_DATE => TIMESTAMP '2020-01-01 00:00:01',
    REPEAT_INTERVAL => 'FREQ=YEARLY;INTERVAL=1',
    ENABLED => TRUE
    );
END;

BEGIN
DBMS_SCHEDULER.CREATE_JOB(
    JOB_NAME => 'MOROSO_JOB',
    JOB_TYPE => 'PLSQL_BLOCK',
    JOB_ACTION => 'MOROSO',
    START_DATE => TIMESTAMP '2020-01-01 00:00:10',
    REPEAT_INTERVAL => 'FREQ=YEARLY;INTERVAL=1',
    ENABLED => TRUE
    );
END; 

 ------------------------------ VISTA CALENDARIO, QUE TIRA DE LOS DATOS DE 3 TABLAS QUE HAY QUE RELACIONAR CON LA COLUMNA COMÚN "COD_SOC" -------------------------------------
  
CREATE OR REPLACE VIEW CALENDARIO (CODIGO_ACTIVIDAD,SOCIO_CREADOR,FECHA_INICIO,FECHA_FIN,NOMBRE_APUNTADO,APELLIDOS_APUNTADO,PRECIO,TIPO,DIFICULTAD) AS SELECT A.COD_ACTIVI, A.SOCIO_CREA_ACTIVIDAD, A.FECHA_INICIO, A.FECHA_FIN,S.NOMBRE,S.APELLIDOS,A.PRECIO,A.TIPO,A.DIFICULTAD
FROM ACTIVIDADES A, SOCIOS S, ACTIVIDADES_SOCIOS N
WHERE A.SOCIO_CREA_ACTIVIDAD=S.COD_SOC AND N.SOCIO_APUNTADO=S.COD_SOC
GROUP BY A.COD_ACTIVI, A.SOCIO_CREA_ACTIVIDAD,A.FECHA_INICIO, A.FECHA_FIN,S.NOMBRE,S.APELLIDOS,A.PRECIO,A.TIPO,A.DIFICULTAD;

COMMIT;


SELECT * FROM CALENDARIO;

  
SHOW ERRORS;


------------------- COMPROBAR EDAD DEL SOCIO RESPONSABLE A LA HORA DE PAGAR LA CUOTA, NO PUEDE SI ES MENOR DE EDAD

CREATE OR REPLACE TRIGGER PAGAR_CUOTA_MENOR
BEFORE INSERT OR UPDATE ON CUOTAS
FOR EACH ROW

DECLARE
V_FECHA_NACI DATE;
V_ANYO_SOCIO_QUE_PAGA NUMBER;

BEGIN

    SELECT S.FECHA_NACI INTO V_FECHA_NACI FROM SOCIOS S, CUOTAS C WHERE C.SOCIO_QUE_PAGA=S.COD_SOC;
    SELECT TRUNC((SYSDATE-V_FECHA_NACI)/365,0) INTO V_ANYO_SOCIO_QUE_PAGA FROM DUAL;
    
    IF INSERTING AND V_ANYO_SOCIO_QUE_PAGA<18 THEN
    RAISE_APPLICATION_ERROR(-20900,'NO PUEDES PAGAR LA CUOTA DEL SOCIO'||:NEW.SOCIO_QUE_PAGA||', PORQUE ERES MENOR... PONTE EN CONTACTO CON EL ADMINISTRADOR');
    
    ELSIF UPDATING AND V_ANYO_SOCIO_QUE_PAGA<18 THEN
    RAISE_APPLICATION_ERROR(-20300,'NO PUEDES PAGAR LA CUOTA DEL SOCIO'||:OLD.SOCIO_QUE_PAGA||', PORQUE ERES MENOR... PONTE EN CONTACTO CON EL ADMINISTRADOR');
    
    END IF;
    
END PAGAR_CUOTA_MENOR;

---------------------------------- FECHA NACIMIENTO DE LOS SOCIOS  RESPONSABLES QUE TIENEN A SU CARGO SOCIOS MENORES---------------------

SELECT A.COD_SOCIO_RESPONSABLE, A.NOMBRE, A.APELLIDOS, B.FECHA_NACI AS "FECHA NACIMIENTO RESPONSABLE" FROM SOCIOS A, SOCIOS B WHERE A.COD_SOCIO_RESPONSABLE=B.COD_SOC AND TRUNC((SYSDATE-B.FECHA_NACI)/365,0)>18;






    
   


    

    



